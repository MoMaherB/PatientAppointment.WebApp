@model List<PatientAppointment.Domain.Appointment>

<form asp-action="Delete" id="antiForgeryForm" class="d-none"></form>

<div class="card mt-4" id="appointmentResultsCard">
    <div class="card-body mt-4">
        <h2 class="card-title mb-0"><i class="fas fa-calendar-alt me-2"></i>Appointments for: <a asp-controller="Patients" asp-action="Details" asp-route-id="@ViewBag.patient.Id" style="text-decoration: none;">@ViewBag.patient.FullName</a></h2>

        <div class="d-flex justify-content-end mb-3">
            <a asp-controller="Appointments" asp-action="AddPatientAppointment" asp-route-pid="@ViewBag.patient.Id" class="btn btn-primary"><i class="fas fa-plus me-2"></i>Add New Appointment</a>
        </div>

        <!-- List of existing appointments -->
        @if (Model != null)
        {
        <ul class="list-group">
            @foreach (var appointment in Model)
            {
                <li class="list-group-item d-flex justify-content-between align-items-center" id="appointment-@appointment.Id">
                    <div>
                    <h6 class="mb-1">@appointment.AppointmentType</h6>
                    <p class="mb-1 text-muted">@appointment.StartDateTime</p>
                            <span class="badge bg-@appointment.AppointmentStatus">@appointment.AppointmentStatus</span>
                </div>
                <div class="d-flex gap-2">
                            <a asp-action="UpdatePatientAppointment" asp-route-id="@appointment.Id" class="btn btn-sm btn-outline-primary" data-action="edit" data-appointment-id="@appointment.Id"><i class="fas fa-edit"></i> Edit</a>
                            <button class="btn btn-sm btn-outline-danger" data-action="delete" data-appointment-id="@appointment.Id"><i class="fas fa-trash"></i> Delete</button>
                </div>
            </li>
            }
        </ul>
        }
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="createModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h1 class="modal-title fs-5" id="createModalLabel">Delete Appointment</h1>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="close"></button>
            </div>
            <div class="modal-body" id="createModalBody">
                Are you sure you want to delete appointment?
            </div>
            <div id="deleteArea" class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submitButton">Delete</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let form = document.getElementById('antiForgeryForm');
        let token = form.querySelector('input[name="__RequestVerificationToken"]').value;
        const appointmentResultsCard = document.getElementById('appointmentResultsCard')
        appointmentResultsCard.addEventListener('click', function(event){
            const btn = event.target;
            const action = btn.dataset.action;

            if (action === 'edit')
            {
                const appointmentId = btn.dataset.appointmentId;
                console.log(appointmentId);
            }
            if (action === 'delete')
            {
                const myModalElement = document.getElementById('createModal');
                const modal = bootstrap.Modal.getOrCreateInstance(myModalElement);
                modal.show();
                const appointmentId = btn.dataset.appointmentId;
                const submitButton = document.getElementById('submitButton');
                submitButton.addEventListener('click', function() {

                fetch(`/Appointments/Delete/${appointmentId}`, {
                method: 'POST',
                headers: {

                    'RequestVerificationToken': token
                }
                }).then(response => response.json()).then(data => {

                     if(data.success) {
                         const appointmentRow = document.getElementById(`appointment-${appointmentId}`);
                          if (appointmentRow) {
                                  appointmentRow.classList.add('fading-out');
                                  setTimeout(() => {
                                  appointmentRow.remove();
                             }, 500);

                          }

                        const modalInstance = bootstrap.Modal.getInstance(myModalElement);
                        modalInstance.hide();
                        
                        toastr.success(data.message, 'Success', { "closeButton": true, "progressBar": true, "timeOut": 5000 });

                     }   

                });
               });

            }    
            });
    </script>
}


               